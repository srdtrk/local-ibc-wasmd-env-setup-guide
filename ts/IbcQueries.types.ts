/**
* This file was automatically generated by @cosmwasm/ts-codegen@0.27.0.
* DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
* and run the @cosmwasm/ts-codegen generate command to regenerate this file.
*/

export type ExecuteMsg = {
  ibc_query: {
    callback: string;
    channel_id: string;
    msgs: QueryRequestForEmpty[];
    [k: string]: unknown;
  };
};
export type QueryRequestForEmpty = {
  bank: BankQuery;
} | {
  custom: Empty;
} | {
  staking: StakingQuery;
} | {
  stargate: {
    data: Binary;
    path: string;
    [k: string]: unknown;
  };
} | {
  ibc: IbcQuery;
} | {
  wasm: WasmQuery;
};
export type BankQuery = {
  balance: {
    address: string;
    denom: string;
    [k: string]: unknown;
  };
} | {
  all_balances: {
    address: string;
    [k: string]: unknown;
  };
};
export type StakingQuery = {
  bonded_denom: {
    [k: string]: unknown;
  };
} | {
  all_delegations: {
    delegator: string;
    [k: string]: unknown;
  };
} | {
  delegation: {
    delegator: string;
    validator: string;
    [k: string]: unknown;
  };
} | {
  all_validators: {
    [k: string]: unknown;
  };
} | {
  validator: {
    address: string;
    [k: string]: unknown;
  };
};
export type Binary = string;
export type IbcQuery = {
  port_id: {
    [k: string]: unknown;
  };
} | {
  list_channels: {
    port_id?: string | null;
    [k: string]: unknown;
  };
} | {
  channel: {
    channel_id: string;
    port_id?: string | null;
    [k: string]: unknown;
  };
};
export type WasmQuery = {
  smart: {
    contract_addr: string;
    msg: Binary;
    [k: string]: unknown;
  };
} | {
  raw: {
    contract_addr: string;
    key: Binary;
    [k: string]: unknown;
  };
} | {
  contract_info: {
    contract_addr: string;
    [k: string]: unknown;
  };
};
export interface Empty {
  [k: string]: unknown;
}
export interface InstantiateMsg {
  packet_lifetime: number;
  [k: string]: unknown;
}